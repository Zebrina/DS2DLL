#pragma once

#include "Enums.h"
#include "GPString.h"
#include "Nema.h"

typedef struct Goid_ Goid;
struct Quat;
typedef struct Scid_ Scid;
struct SiegePos;
typedef struct vector_3 Vector3;

enum eCreateFFXFlags {

};

class WorldEffectsMgr {
public:
	$Singleton(WorldEffectsMgr, 0x00424434);

	$Method(0x008c8313, AttachAnimatedModelToTarget, bool, uint unk1, uint unk2);
	$Method(0x008c7137, AttachLightSourceToTarget, bool, uint unk1, uint unk2);
	$Method(0x008c8415, AttachTerrainDeformerToTarget, bool, uint unk1, uint unk2);
	$Method(0x008ca36f, BindFlickFXPoint, bool, const FFXID* unk1, const GPBString& unk2, const SiegePos& unk3);
	$Method(0x008c7bf8, BindFlickFXProperty, bool, const FFXID* unk1, const GPBString& unk2, const GPBString& unk3);
	$Method(0x008c7ba9, BindFlickFXRole, bool, const FFXID* unk1, const GPBString& unk2, const Goid* unk3);
	$Method(0x008c4ce7, DestroyAllTargetEffects, bool, uint unk1);
	$Method(0x008c330c, DestroyAllTargets, bool);
	$Method(0x008c8b2e, DestroyAllTargetSimulations, bool, uint unk1);
	$Method(0x008cf1ea, DestroyAnimatedModel, bool, uint unk1);
	$Method(0x008c7273, DestroyDecal, bool, uint unk1, bool unk2);
	$Method(0x008c792e, DestroyEffectScript, bool, uint unk1);
	$Method(0x00423e07, DestroyFlickFX, bool, const FFXID* unk1);
	$Method(0x008c70fb, DestroyLightSource, bool, uint unk1);
	$Method(0x008ccca0, DestroyTarget, bool, uint unk1);
	$Method(0x008cf41d, DestroyTerrainDeformer, bool, uint unk1);
	$Method(0x008c8ad6, DetachTargetSimulation, bool, uint unk1, uint unk2, float unk3);
	$Method(0x00423c9d, DetachTargetSimulation, bool, uint unk1, uint unk2);
	$Method(0x008c8349, FadeAnimatedModel, bool, uint unk1, float unk2, float unk3, float unk4, float unk5);
	$Method(0x00423b82, FadeAnimatedModel, bool, uint unk1, float unk2, float unk3, float unk4);
	$Method(0x008c7188, FadeOutLightSource, bool, uint unk1, float unk2);
	$Method(0x008c6331, FadeOutLightSourcesOnTarget, bool, uint unk1, float unk2);
	$Method(0x008c33a5, FinishAllTargetEffects, bool, uint unk1);
	$Method(0x008c867e, FinishFlickFX, bool, const FFXID* unk1);
	$Method(0x008c363f, GetEffectVisible, bool, uint unk1);
	$Method(0x004249c3, IsFFXValid, bool, const FFXID* unk1);
	$ConstMethod(0x00423e4f, IsShuttingDown, bool);
	$Method(0x008cc700, QueueAnimatedModelAnimChore, bool, uint unk1, const GPBString& unk2, int unk3, float unk4);
	$Method(0x00423bc8, QueueAnimatedModelAnimChore, bool, uint unk1, const GPBString& unk2, int unk3);
	$Method(0x00423bae, QueueAnimatedModelAnimChore, bool, uint unk1, const GPBString& unk2);
	$Method(0x008c8387, ScaleAnimatedModel, bool, uint unk1, float unk2, float unk3);
	$Method(0x008d1853, SDestroyFlickFX, bool, const FFXID* unk1);
	$Method(0x008c83f1, SetAnimatedModelTexture, bool, uint unk1, int unk2, const char* unk3);
	$Method(0x008c729d, SetDecalAlpha, bool, uint unk1, float unk2);
	$Method(0x008c720a, SetLightSourceColor, bool, uint unk1, const Vector3& unk2);
	$Method(0x008c71cb, SetLightSourcePosition, bool, uint unk1, const SiegePos& unk2);
	$Method(0x008c844f, SetTerrainDeformerPosition, bool, uint unk1, const SiegePos& unk2);
	$Method(0x008ca347, SFinishFlickFX, bool, const FFXID* unk1);
	$Method(0x008c3347, ValidateMovingTarget, bool, uint unk1, uint unk2, float unk3, float unk4);
	$Method(0x008c83d2, GetAnimatedModelAspect, NemaAspect::ResHandle, uint unk1);
	$Method(0x008d20ac, CreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, bool unk3, bool unk4);
	$Method(0x008d20df, CreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, bool unk4, bool unk5);
	$Method(0x008d2112, CreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, const Goid* unk4, bool unk5, bool unk6);
	$Method(0x00423deb, CreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, const Goid* unk4);
	$Method(0x00423dd2, CreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3);
	$Method(0x00423dbc, CreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2);
	$ConstMethod(0x00423e18, GetCurrentFlickFX, const FFXID*);
	$Method(0x008d1cfd, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, bool unk3, bool unk4);
	$Method(0x00423d39, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, bool unk3);
	$Method(0x008d1e14, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, bool unk4, bool unk5);
	$Method(0x00423d69, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, bool unk4);
	$Method(0x008d1f50, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, const Goid* unk4, bool unk5, bool unk6);
	$Method(0x00423d9f, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, const Goid* unk4, bool unk5);
	$Method(0x00423d83, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3, const Goid* unk4);
	$Method(0x00423d50, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2, const Goid* unk3);
	$Method(0x00423d23, SCreateFlickFX, const FFXID*, const GPBString& unk1, const Goid* unk2);
	$ConstMethod(0x00423e2d, GetCurrentFlickFXCatalyst, const Goid*);
	$ConstMethod(0x00423e1c, GetCurrentFlickFXOwner, const Goid*);
	$ConstMethod(0x00423e3e, GetCurrentFlickFXTarget, const Goid*);
	$Method(0x008c340d, GetTargetPosition, const SiegePos&, uint unk1);
	$Method(0x008c3500, GetTargetVectorToTarget, const Vector3&, uint unk1, uint unk2);
	$Method(0x008c3482, GetTargetVelocity, const Vector3&, uint unk1);
	$Method(0x008c4d07, GetDistanceBetweenTargets, float, uint unk1, uint unk2);
	$Method(0x008c34d8, GetTargetSpeed, float, uint unk1);
	$Method(0x008c3708, SetEffectTexture, uint, uint unk1, const GPBString& unk2, float unk3, float unk4);
	$Method(0x008c36e3, SetEffectTexture, uint, uint unk1, const GPBString& unk2);
	$Method(0x008c8b4e, AttachSimulationf, uint, uint effect, float unk2, float unk3, const char* unk4, ...);
	$Method(0x008c3693, AttachGlobalSimulation, uint, uint effect, const GPBString& unk2, float unk3);
	$Method(0x008c364e, AttachSimulation, uint, uint effect, const GPBString& unk2, float unk3);
	$Method(0x00423c4b, AttachTargetSimulation, uint, uint effect, const GPBString& unk2, float unk3);
	$Method(0x00423c82, AttachTargetSimulation, uint, uint effect, const GPBString& unk2);
	$Method(0x008ccd17, AttachTargetSimulation, uint, uint effect, uint unk2, const GPBString& unk3, float unk4);
	$Method(0x00423c67, AttachTargetSimulation, uint, uint effect, uint unk2, const GPBString& unk3);
	$Method(0x008cdd04, CreateAnimatedModel, uint, uint unk1, const GPBString& unk2);
	$Method(0x008cdd71, CreateAnimatedModel, uint, uint unk1, const Goid* unk2);
	$Method(0x008c7564, CreateCylinderBetweenTargets, uint, uint unk1, uint unk2, uint unk3, float unk4, float unk5, uint unk6, uint unk7, float unk8, bool unk9, bool unk10);
	$Method(0x008c74e8, CreateCylinderEffect, uint, uint unk1, uint unk2, const Vector3& unk3, float unk4, float unk5, float unk6, float unk7, uint unk8, uint unk9, float unk10, bool unk11, bool unk12);
	$Method(0x00423ce0, CreateCylinderEffect, uint, uint unk1, uint unk2, const Vector3& unk3, float unk4, float unk5, float unk6, float unk7, uint unk8, uint unk9);
	$Method(0x008c7437, CreateDecalDiscEffect, uint, uint unk1, uint unk2, uint unk3, float unk4, uint unk5, uint unk6, float unk7, float unk8, bool unk9);
	$Method(0x008c73b8, CreateDiscEffect, uint, uint unk1, uint unk2, float unk3, const Vector3& unk4, float unk5, float unk6, uint unk7, uint unk8, float unk9, float unk10, float unk11, bool unk12);
	$Method(0x008cdf35, CreateEffectScript, uint, const GPBString& unk1, uint unk2);
	$Method(0x008cddde, CreateLightSource, uint, const SiegePos& unk1, const Vector3& unk2, float unk3, float unk4, float unk5, float unk6, float unk7, bool unk8);
	$Method(0x008cf268, CreateLightSource, uint, uint unk1, const Vector3& unk2, float unk3, float unk4, float unk5, float unk6, float unk7, bool unk8);
	$Method(0x008c78ce, CreateModelEffect, uint, uint unk1, const GPBString& unk2, const Vector3& unk3, float unk4, uint unk5, float unk6, bool unk7, bool unk8);
	$Method(0x008c786f, CreateModelEffect, uint, uint unk1, const GPBString& unk2, const Vector3& unk3, float unk4, uint unk5, float unk6, bool unk7);
	$Method(0x008c7810, CreateModelEffect, uint, uint unk1, const GPBString& unk2, const Vector3& unk3, uint unk4, float unk5, bool unk6, bool unk7);
	$Method(0x008c77b2, CreateModelEffect, uint, uint unk1, const GPBString& unk2, const Vector3& unk3, uint unk4, float unk5, bool unk6);
	$Method(0x008c7752, CreateModelEffect, uint, uint unk1, const GPBString& unk2, uint unk3, float unk4, bool unk5);
	$Method(0x008c7329, CreateParticleEffect, uint, uint unk1);
	$Method(0x008c736c, CreateRibbonEffect, uint, uint unk1, uint unk2, eRibbonAlign unk3, bool unk4);
	$Method(0x008c85f9, CreateRibbonEffect, uint, uint unk1, uint unk2, eRibbonAlign unk3);
	$Method(0x008c76e7, CreateSphereEffect, uint, uint unk1, uint unk2, const Vector3& unk3, float unk4, float unk5, uint unk6, float unk7, bool unk8, bool unk9, bool unk10);
	$Method(0x008c767d, CreateSphereEffect, uint, uint unk1, uint unk2, const Vector3& unk3, float unk4, float unk5, uint unk6, float unk7, bool unk8, bool unk9);
	$Method(0x008c7611, CreateSphereEffect, uint, uint unk1, uint unk2, float unk3, uint unk4, float unk5, bool unk6, bool unk7);
	$Method(0x00423c12, CreateTarget, uint);
	$Method(0x008c8aad, CreateTarget, uint, uint unk1);
	$Method(0x008cde6e, CreateTerrainDecal, uint, const SiegePos& unk1, const Quat& unk2, const GPBString& unk3, float unk4, float unk5, float unk6, float unk7, float unk8, float unk9, float unk10);
	$Method(0x008cf382, CreateTerrainDecal, uint, const SiegePos& unk1, const Quat& unk2, const GPBString& unk3, float unk4, float unk5, float unk6, float unk7);
	$Method(0x008cf316, CreateTerrainDecal, uint, uint unk1, const GPBString& unk2, float unk3, float unk4, float unk5, float unk6, float unk7, float unk8, float unk9);
	$Method(0x008cfd74, CreateTerrainDecal, uint, uint unk1, const GPBString& unk2, float unk3, float unk4, float unk5, float unk6);
	$Method(0x008c8a82, CreateTimedTarget, uint, float unk1, bool unk2, uint unk3);
	$Method(0x00423bfa, CreateTimedTarget, uint, float unk1, bool unk2);
	$Method(0x00423be3, CreateTimedTarget, uint, float unk1);
	$Method(0x008cfe19, CreateWaveTerrainDeformer, uint, const SiegePos& unk1, float unk2, float unk3, float unk4);
	$Method(0x008cfe6f, CreateWaveTerrainDeformer, uint, uint unk1, float unk2, float unk3, float unk4);
	$ConstMethod(0x0042493d, GetNumAnimatedModels, uint);
	$ConstMethod(0x0042495e, GetNumDecals, uint);
	$ConstMethod(0x0042498a, GetNumGlobalEffectScripts, uint);
	$ConstMethod(0x0042494b, GetNumLightSources, uint);
	$ConstMethod(0x0042440d, GetNumTargets, uint);
	$ConstMethod(0x00424974, GetNumTerrainDeformers, uint);
	$Method(0x008c9df6, AddBoneOffsetToTarget, void, uint target, const Vector3& offset);
	$Method(0x008c9e38, AddGlobalOffsetToTarget, void, uint target, const Vector3& offset);
	$Method(0x008c9db4, AddOffsetToTarget, void, uint target, const Vector3& offset);
	$Method(0x008c3816, AddTargetToEffect, void, uint unk1, uint unk2);
	$Method(0x008cc732, AddTargetToScriptMsgLatch, void, const FFXID* unk1, uint unk2, uint unk3);
	$Method(0x0042441f, AddTargetToScriptMsgLatch, void, uint unk1, uint unk2);
	$Method(0x008c9ce2, AttachTargetToBone, void, uint unk1, const GPBString& unk2);
	$Method(0x008c9d1e, AttachTargetToBone, void, uint unk1, uint unk2);
	$Method(0x008c9d44, AttachTargetToDefaultPos, void, uint unk1, const Goid* unk2);
	$Method(0x008c9c18, AttachTargetToGo, void, uint unk1, const Goid* unk2, const GPBString& unk3);
	$Method(0x008c9c80, AttachTargetToGo, void, uint unk1, const Goid* unk2, uint unk3);
	$Method(0x00423c37, AttachTargetToGo, void, uint unk1, const Goid* unk2);
	$Method(0x008c9b5a, AttachTargetToModel, void, uint unk1, uint unk2, const GPBString& unk3);
	$Method(0x008c9bbc, AttachTargetToModel, void, uint unk1, uint unk2, uint unk3);
	$Method(0x00423c23, AttachTargetToModel, void, uint unk1, uint unk2);
	$Method(0x008c9b01, AttachTargetToTarget, void, uint unk1, uint unk2);
	$Method(0x008c372f, ClearEffectTextures, void, uint unk1);
	$Method(0x008c3613, DestroyEffect, void, uint unk1);
	$Method(0x008c36b8, DetachGlobalSimulation, void, uint unk1, float unk2);
	$Method(0x008c3674, DetachSimulation, void, uint unk1, uint unk2, float unk3);
	$Method(0x008c3630, FinishEffect, void, uint unk1);
	$Method(0x008c7b7b, PostFlickFXMessageToEffectScript, void, const FFXID* unk1, const WorldMessage& unk2, uint unk3);
	$Method(0x008c7b4d, PostFlickFXMessageToTarget, void, const FFXID* unk1, const WorldMessage& unk2, uint unk3);
	$Method(0x008d1a73, RCCreateFlickFX, void, const GPBString& unk1, const GPBString& unk2, const Goid* unk3, const Goid* unk4, const Goid* unk5, eCreateFFXFlags unk6, const FFXID* unk7);
	$Method(0x008d1978, RCCreateFlickFX, void, const GPBString& unk1, const GPBString& unk2, const Goid* unk3, const Goid* unk4, eCreateFFXFlags unk5, const FFXID* unk6);
	$Method(0x008d187d, RCCreateFlickFX, void, const GPBString& unk1, const GPBString& unk2, const Goid* unk3, eCreateFFXFlags unk4, const FFXID* unk5);
	$Method(0x008d10a4, RCDestroyFlickFX, void, const FFXID* unk1);
	$Method(0x008c8bc9, RCFinishFlickFX, void, const FFXID* unk1);
	$Method(0x008c383a, RemoveTargetFromEffect, void, uint unk1, uint unk2);
	$Method(0x008c83b6, SetAnimatedModelRenderOrientOnly, void, uint unk1, bool unk2);
	$Method(0x008c37a5, SetDistanceCoefficients, void, uint unk1, float unk2, float unk3, float unk4);
	$Method(0x008c374d, SetEffectAlphaOp, void, uint unk1, eTextureOp unk2);
	$Method(0x008c377a, SetEffectCameraOffset, void, uint unk1, const Vector3& offset);
	$Method(0x008c373e, SetEffectColorOp, void, uint unk1, eTextureOp unk2);
	$Method(0x008c376b, SetEffectDestBlend, void, uint unk1, ePixelBlend pixelBlend);
	$Method(0x008c36d4, SetEffectGlobalSimAllowed, void, uint unk1, bool unk2);
	$Method(0x008c3807, SetEffectLighting, void, uint unk1, bool unk2, bool unk3);
	$Method(0x008c3789, SetEffectSortingOffset, void, uint unk1, float unk2);
	$Method(0x008c375c, SetEffectSrcBlend, void, uint unk1, ePixelBlend pixelBlend);
	$Method(0x008c33de, SetLockOrientToTarget, void, uint unk1, uint unk2, uint unk3);
	$Method(0x008ca321, SetLockOrientToVelocity, void, uint unk1, bool unk2);
	$Method(0x008c37e0, SetParticleTracers, void, uint unk1, bool unk2, float unk3, float unk4);
	$Method(0x008c37d1, SetQuadRendering, void, uint unk1, bool unk2);
	$Method(0x008ca289, SetTargetBoneOffset, void, uint unk1, const Vector3& offset);
	$Method(0x008c387c, SetTargetDependence, void, uint unk1, bool unk2, bool unk3);
	$Method(0x008c33c5, SetTargetExternal, void, uint unk1, bool unk2);
	$Method(0x008ca2b6, SetTargetGlobalOffset, void, uint unk1, const Vector3& offset);
	$Method(0x008ca25c, SetTargetOffset, void, uint target, const Vector3& offset);
	$Method(0x008ca2e3, SetTargetOffsetRingPerpToVector, void, uint target, const Vector3& unk2, float unk3, float unk4);
	$Method(0x008ca21d, SetTargetOffsets, void, uint target, const Vector3& unk2, const Vector3& unk3, const Vector3& unk4);
	$Method(0x008c9ed3, SetTargetOrientation, void, uint target, const Quat& unk2);
	$Method(0x008c9f01, SetTargetPlacement, void, uint target, const SiegePos& unk2, const Quat& unk3);
	$Method(0x008c9e7a, SetTargetPosition, void, uint target, const SiegePos& unk2);
	$Method(0x008ca11a, SetTargetToBone, void, uint target, const GPBString& unk2);
	$Method(0x008ca15d, SetTargetToBone, void, uint unk1, uint unk2);
	$Method(0x008ca19a, SetTargetToDefaultPos, void, uint unk1, const Goid* unk2);
	$Method(0x008ca022, SetTargetToGo, void, uint unk1, const Goid* unk2, const GPBString& unk3);
	$Method(0x008ca0a1, SetTargetToGo, void, uint unk1, const Goid* unk2, uint unk3);
	$Method(0x00423ccc, SetTargetToGo, void, uint unk1, const Goid* unk2);
	$Method(0x008c9f3e, SetTargetToModel, void, uint unk1, uint unk2, const GPBString& unk3);
	$Method(0x008c9fb3, SetTargetToModel, void, uint unk1, uint unk2, uint unk3);
	$Method(0x00423cb5, SetTargetToModel, void, uint unk1, uint unk2);

    // 0x000
    $Padding(0x000, 0x268);
};

STATIC_ASSERT(sizeof(WorldEffectsMgr) == 0x268);

typedef WorldEffectsMgr WorldEffectsManager;
